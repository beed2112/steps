steps.AfterNmap

##FTP enumeration
basic manual enumeration - double checking nmap scripts
create ftp.foo before connecting
connetc?
list 
write

##HTTP enumeration 
see what we are dealing with and looking for stuff ->  CMS xploits, LFI. etc
 reference https://www.geeksforgeeks.org/gobuster-penetration-testing-tools-in-kali-tools/

dir hunt

favorite aliases 
 dir hunts, vdirs, nkito 
 http://$targetHTTP/FUZZ

export targetHTTP=host:port ; echo $targetHTTP

bigenchilada
mediumenchilada
smallenchilada


gobuster dir -u http://$targetHTTP/ -w /usr/share/dirb/wordlists/big.txt -z -t 20 -k  -x "txt,html,htm,php,asp,aspx,jsp" -o "$targetIP/scans/tcp_\$targtetPort_http_gobuster_dirb_big.txt"
gobuster dir -u http://$targetHTTP/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -z -t 20 -k   "txt,html,htm,php,asp,aspx,jsp" -o "$targetIP/scans/tcp_$\targtetPort_http_gobuster_webcommon.txt"

Lists to consider:
raft-large-directories.txt
raft-medium-files.txt    # file hunting

any virtual hosting?

gobuster vhost -u http://$targetHTTP/ -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 10 -o "$targetIP/scans/vdir_\$targtetPort_http_gobuster.txt"

consider --append-domain  


# grab index robots
curl -sSik http://$targetHTTP/ -m 10 2>&1 | tee "$targetIP/scans/tcp_\$targtetPort_http_index.html"
curl -sSik http://$targetHTTP/robots.txt -m 10 2>&1 | tee "$targetIP/scans/tcp_\$targtetPort_http_robots.txt"


# dig in 

nikto -ask=no -h http://$targetHTTP 2>&1 | tee "$targetIP/scans/tcp_\$targtetPort_http_nikto.txt"

droopescan scan drupal -u http://$targetHTTP -t 20 2>&1 | tee "$targetIP/scans/tcp_\$targtetPort_http_droopescan.txt"

whatweb --color=never --no-errors -a 3 -v http://$targetHTTP 2>&1 | tee "$targetIP/scans/tcp_\$targtetPort_http_whatweb.txt"

# I have an alias for this... use it..   also add this...  --> --no-update 

alias mywpscan='wpscan --enumerate --api-token TRoV0YSbxfGSlk8AnKAavrZxXrskGaly7ag3gszkKIQ --url '
wpscan --url http://$targetHTTP -e --plugins-detection=mixed -t 20 -o $targetHTTP/scans/tcp_80_http_wpscan.txt

#documentation
wkhtmltoimage --format png http://$targetHTTP/ $targetIP/report/screenshots/tcp_\$targtetPort_http_screenshot.png






# SMB

# Listing contents of top-level directory on port 445
cme smb $targetIP -p 445 --shares -o "$targetIP/scans/smb445_cme-list-contents-topdir.txt"

# Share permissions on port 445
cme smb $targetIP -p 445 --shares -o "$targetIP/scans/smb445_cme-share-permissions.txt"

# Execute command (ipconfig /all) on port 445
cme smb $targetIP -p 445 -x "ipconfig /all" -o "$targetIP/scans/smb445_cme-execute-command.txt"

# Gather a recursive listing of files (port 445)
cme smb $targetIP -p 445 --recursive -o "$targetIP/scans/smb445_cme-list-contents-recursive.txt"


# Listing contents of top-level directory
smbclient -N -L //$targetIP -p 445 -R 2>&1 | tee -a "$targetIP/scans/udp_137_smbclient-list-contents-topdir.txt"
smbclient -N //$targetIP -p 445 -R 2>&1 | tee -a "$targetIP/scans/udp_137_smbclient-list-contents-topdir.txt"

# Share permissions
smbclient -N -L //$targetIP -p 445 2>&1 | tee -a "$targetIP/scans/udp_137_smbclient-share-permissions.txt"
smbclient -N //$targetIP -p 445 2>&1 | tee -a "$targetIP/scans/udp_137_smbclient-share-permissions.txt"



# Execute command (ipconfig /all) on port 445
smbclient -N -L //$targetIP -p 445 -c "ipconfig /all" 2>&1 | tee -a "$targetIP/scans/udp _445_smbclient-execute-command.txt"
smbclient -N //$targetIP -p 445 -c "ipconfig /all" 2>&1 | tee -a "$targetIP/scans/udp _445_smbclient-execute-command.txt"


# Gather a recursive listing of files (port 445)
timeout -v 10m smbclient -N -L //$targetIP -p 445 -R >> "$targetIP/scans/udp _445_smbclient-list-contents-recursive.txt" 2>&1
timeout -v 10m smbclient -N //$targetIP -p 445 -R >> "$targetIP/scans/udp _445_smbclient-list-contents-recursive.txt" 2>&1



# see what we can see what anon and non anon access looks like 
smbmap -H $targetIP -p 445 -r 2>&1 | tee -a "$targetIP/scans/udp _445_smbmap-list-contents-topdir.txt"; smbmap -u null -p "" -H $targetIP -p 445 -r 2>&1 | tee -a "$targetIP/scans/udp _445_smbmap-list-contents-topdir.txt"
smbmap -H $targetIP -p 445 2>&1 | tee -a "$targetIP/scans/udp _445_smbmap-share-permissions.txt"; smbmap -u null -p "" -H $targetIP -p 445 2>&1 | tee -a "$targetIP/scans/udp _445_smbmap-share-permissions.txt"

# can we run command?
smbmap -H $targetIP -p 445 -x "ipconfig /all" 2>&1 | tee -a "$targetIP/scans/udp _445_smbmap-execute-command.txt"; smbmap -u null -p "" -H $targetIP -p 445 -x "ipconfig /all" 2>&1 | tee -a "$targetIP/scans/udp _445_smbmap-execute-command.txt"

# gather listing of files if we can access 
timeout -v 10m smbmap -H $targetIP -p 445 -R >> "$targetIP/scans/udp _445_smbmap-list-contents-recursive.txt" 2>&1; timeout -v 10m smbmap -u null -p "" -H $targetIP -p 445 -R >> "$targetIP/scans/udp _445_smbmap-list-contents-recursive.txt" 2>&1

#for completeness
enum4linux -a -M -l -d $targetIP 2>&1 | tee "$targetIP/scans/enum4linux.txt"
nbtscan -rvh $targetIP 2>&1 | tee "$targetIP/scans/nbtscan.txt"

# nfs: udp_111
showmount -e $targetIP 2>&1 | tee "$targetIP/scans/udp_111_showmount.txt"




##SNMP enumeration

https://net-snmp.sourceforge.io/wiki/index.php/TUT:Customized_Output_Formats

-On using numerical order to textual OIDs:

-Oe enumerated lists numerically or with textual translations:

-Os, -OS, and -Of Shortening the

-Of - fullly qualified Mib

-Oqv flag outputs only the value, but not variable name (scripts - HP printer password )

snmpwalk -c public -v 1 $targetIP 1  2>&1 | tee "$targetIP/scans/udp_161_snmp_all.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.2.1.25.1.6.0 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_system_processes.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.2.1.25.2.3.1.4 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_storage_units.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.2.1.25.4.2.1.2 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_running_processes.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.2.1.25.4.2.1.4 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_process_paths.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.2.1.25.6.3.1.2 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_software_names.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.2.1.6.13.1.3 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_tcp_ports.txt"
snmpwalk -c public -v 1 $targetIP 1.3.6.1.4.1.77.1.2.25 2>&1 | tee "$targetIP/scans/udp_161_snmp_snmpwalk_user_accounts.txt"
snmpwalk -c public -v1 $targetIP 2>&1 | tee "$targetIP/scans/snmpwalk.txt"



Brute force community strings

onesixtyone -c /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings-onesixtyone.txt \
 -dd $targetIP 2>&1 | tee "$targetIP/scans/udp_161_snmp_onesixtyone.txt"




